{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nandkishor\\\\Downloads\\\\My_Projects\\\\TO-DO app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setmessage] = useState(\"\");\n  const handleclick = async () => {\n    try {\n      const res = await fetch(\"http://localhost:8000/api/addtodo\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      if (res.status === \"ok\") {\n        alert(\"new task added succesfully\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        value: message,\n        onChange: e => setmessage(e.target.value),\n        placeholder: \"Add Your Work here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleclick,\n          children: \"ADD \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XKxJQD+OjuYXJ99wAgpZA8Y/diE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","message","setmessage","handleclick","res","fetch","method","headers","body","JSON","stringify","status","alert","err","console","log","className","children","type","name","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nandkishor/Downloads/My_Projects/TO-DO app/client/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [message, setmessage] = useState(\"\");\n\n  const handleclick = async () => {\n    try {\n      const res = await fetch(\"http://localhost:8000/api/addtodo\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n           message\n          }),\n      });\n      if (res.status === \"ok\") {\n        alert(\"new task added succesfully\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"input\">\n        <input\n          type=\"text\"\n          name=\"message\"\n          value={message}\n          onChange={(e) => setmessage(e.target.value)}\n          placeholder=\"Add Your Work here\"\n        />\n        <span>\n          <button onClick={handleclick}>ADD </button>\n        </span>\n      </div>\n      <div className=\"show\">{message}</div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAClBT;QACD,CAAC;MACL,CAAC,CAAC;MACF,IAAIG,GAAG,CAACO,MAAM,KAAK,IAAI,EAAE;QACvBC,KAAK,CAAC,4BAA4B,CAAC;MACrC;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EACD,oBACEf,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAKkB,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBnB,OAAA;QACEoB,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,SAAS;QACdC,KAAK,EAAEnB,OAAQ;QACfoB,QAAQ,EAAGC,CAAC,IAAKpB,UAAU,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC5CI,WAAW,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACF9B,OAAA;QAAAmB,QAAA,eACEnB,OAAA;UAAQ+B,OAAO,EAAE1B,WAAY;UAAAc,QAAA,EAAC;QAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACN9B,OAAA;MAAKkB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAEhB;IAAO;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV;AAAC5B,EAAA,CAtCQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}