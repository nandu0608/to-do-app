{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nandkishor\\\\Downloads\\\\My_Projects\\\\TO-DO app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setmessage] = useState(\"\");\n  const handleclick = async () => {\n    try {\n      const res = await fetch(\"http://localhost:8000/api/addtodo\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(form)\n      });\n      if (res.status === \"ok\") {\n        alert(\"new task added succesfully\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        value: message,\n        onChange: e => setmessage(e.target.value),\n        placeholder: \"Add Your Work here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleclick,\n          children: \"ADD \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XKxJQD+OjuYXJ99wAgpZA8Y/diE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","message","setmessage","handleclick","res","fetch","method","headers","body","JSON","stringify","form","status","alert","err","console","log","className","children","type","name","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nandkishor/Downloads/My_Projects/TO-DO app/client/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [message, setmessage] = useState(\"\");\n\n  const handleclick = async () => {\n    \n    try \n    {\n      const res = await fetch(\"http://localhost:8000/api/addtodo\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body:JSON.stringify(form),\n      });\n      if (res.status === \"ok\") {\n        alert(\"new task added succesfully\");\n      }\n    } \n    catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"input\">\n        <input\n          type=\"text\"\n          name=\"message\"\n          value={message}\n          onChange={(e) => setmessage(e.target.value)}\n          placeholder=\"Add Your Work here\"\n        />\n        <span><button onClick={handleclick}>ADD </button></span>\n      </div>\n      <div className=\"show\">\n              {message}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;IAE9B,IACA;MACE,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACC,IAAI;MAC1B,CAAC,CAAC;MACF,IAAIP,GAAG,CAACQ,MAAM,KAAK,IAAI,EAAE;QACvBC,KAAK,CAAC,4BAA4B,CAAC;MACrC;IACF,CAAC,CACD,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EACD,oBACEhB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA;MAAKmB,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBpB,OAAA;QACEqB,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,SAAS;QACdC,KAAK,EAAEpB,OAAQ;QACfqB,QAAQ,EAAGC,CAAC,IAAKrB,UAAU,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC5CI,WAAW,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACF/B,OAAA;QAAAoB,QAAA,eAAMpB,OAAA;UAAQgC,OAAO,EAAE3B,WAAY;UAAAe,QAAA,EAAC;QAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eACN/B,OAAA;MAAKmB,SAAS,EAAC,MAAM;MAAAC,QAAA,EACZjB;IAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7B,EAAA,CAvCQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}